Built-ins
********************

!
    ! [ 0 -eq 0 ]   -> returns 1
    Invert the the logic in a pipeline

#
    Introduce a comment that goes to the end of the line

#! 
    #!/bin/bash
    Called 'shebang' it is the first line of a shell script, denotes which shell to use

: 
    :echo "Pass"    -> returns 0
    a null command for syntax purpose only (common in case entries). It will evaluate expansion

.
    read and exicute the lines in a file from $PATH and if not available checks the local dir

[[ ]]
    [[ $file -e && $file -r ]]  -> returns 0 if both are true and 1 if one of the two conditions is false 
    expanded functionality on the normal test '[ ]' operations. 
    Additional operators include:
      && - Logical AND test expression (short circut)
      || - Logical OR test experession (short circut)
       < - Tests to see if a string is lexically shorter than than another
       > - Tests to see if a string is lexically longer than than another

name () { commands }
    hello_world () { echo "Hello, World! }
    Posix syntax for declaring a function in bash. Can be on one line, like 
    the example above or across multiple lines

alias
    alias hello='echo "Hello World!"'

bg
    bg 413  -> sends pid 413 to the background and returns 0
    Resumes suspeneded jobs in the background, similar to calling a command 
    with an '&'. Will return 0 unless job control is disabled. 

bind
    

